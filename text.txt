En informatique, plus précisément en développement logiciel, la programmation orientée prototype est une forme de programmation orientée objet sans classe, fondée sur la notion de prototype. Un prototype est un objet à partir duquel on crée de nouveaux objets. Dans le langage de programmation orientée prototype Self, les propriétés d'un objet, qu'elles renvoient à des attributs ou à des méthodes, sont appelés slots ; il n'y a pas la même distinction entre les slots de données et les slots de code qu'on a avec les classes. La grande différence avec la programmation objet à classe est qu'on peut remplacer le contenu des slots, en ajouter d'autres ou changer la hiérarchie d'héritage que cela soit prévu dans l'objet original ou pas.

Self fut le premier langage à prototypes. Il a été conçu dans les laboratoires de Sun dans les années 1990. Le plus connu actuellement est JavaScript.

Comparaison des modèles à classes et à prototypes
Objets à classes :

Une classe définie par son code source est statique ;
Elle représente une définition abstraite de l'objet ;
Tout objet est instance d'une classe ;
L'héritage se situe au niveau des classes.
Objets à prototypes :

Un prototype défini par son code source est mutable ;
Il est lui-même un objet au même titre que les autres ;
Il a donc une existence physique en mémoire ;
Il peut être modifié, appelé ;
Il est obligatoirement nommé ;
Un prototype peut être vu comme un exemplaire modèle d'une famille d'objet ;
Un objet hérite des propriétés (valeurs et méthodes) de son prototype.
